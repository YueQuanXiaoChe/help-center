# 开启或者关闭 gzip 模块，默认值为 off，可配置为 on / off
gzip on;

# 设置允许压缩的页面最小字节数，Content-Length 小于该值的请求将不会被压缩，默认值: 0，当设置的值较小时，压缩后的长度可能比原文件大，建议设置 1000 以上
gzip_min_length 10k;

# 设置 gzip 压缩级别，级别越底压缩速度越快文件压缩比越小，反之速度越慢文件压缩比越大。默认值为 1，压缩级别取值为 1-9
gzip_comp_level 1;

# 除了“text/html”之外，还允许 gzip 处理指定 MIME 类型的响应。特殊值“*”匹配任何 MIME 类型（0.8.29）。“text/html”类型的响应总是压缩的
gzip_types text/html text/css text/plain application/x-javascript image/svg+xml image/x-icon application/json;
# gzip_types text/plain application/javascript application/x-javascript text/css application/xml text/javascript application/x-httpd-php image/jpeg image/gif image/png application/vnd.ms-fontobject font/ttf font/opentype font/x-woff image/svg+xml;

# 是否在 http header 中添加 Vary: Accept-Encoding，建议开启
gzip_vary on;

# 配置禁用gzip条件，支持正则。此处表示ie6及以下不启用gzip（因为ie低版本不支持）
gzip_disable "MSIE [1-6]\.";

# 设置用于处理请求压缩的缓冲区数量和大小。比如 32 4K 表示按照内存页（one memory page）大小以 4K 为单位（即一个系统中内存页为 4K ），申请 32 倍的内存空间。建议此项不设置，使用默认值
# gzip_buffers 32 4k;

# 开启后，nginx 会去找和目标资源（c.png）同目录下的压缩过的资源（c.png.gz），并将压缩过的资源传递给客户端
# gzip_static on;

# 启用 GZip 所需的 HTTP 最低版本，默认值为 HTTP/1.1
gzip_http_version 1.1;

# Nginx做为反向代理的时候启用: off 关闭所有的代理结果数据压缩
gzip_proxied off;
